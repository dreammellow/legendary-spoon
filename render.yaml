services:
  # PostgreSQL Database
  - type: pserv
    name: cryptoairdrop-db
    plan: free
    region: oregon
    runtime: postgres
    startCommand: "postgres"
    envVars:
      - key: POSTGRES_DB
        value: cryptoairdrop
      - key: POSTGRES_USER
        value: postgres
      - key: POSTGRES_PASSWORD
        generateValue: true

  # Redis Cache
  - type: redis
    name: cryptoairdrop-redis
    plan: free
    maxmemoryPolicy: allkeys-lru
    ipAllowList: []

  # FastAPI Backend
  - type: web
    name: cryptoairdrop-backend
    env: docker
    dockerfilePath: ./backend/Dockerfile
    plan: free
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: cryptoairdrop-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: cryptoairdrop-redis
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: ALLOWED_ORIGINS
        value: https://cryptoairdrop-frontend.onrender.com,https://cryptoairdrop-platform.onrender.com
      - key: SMTP_HOST
        value: smtp.gmail.com
      - key: SMTP_PORT
        value: 587
      - key: SMTP_USERNAME
        sync: false
      - key: SMTP_PASSWORD
        sync: false
      - key: ETHEREUM_RPC_URL
        value: https://mainnet.infura.io/v3/your-project-id
      - key: POLYGON_RPC_URL
        value: https://polygon-rpc.com
    healthCheckPath: /api/health

  # Next.js Frontend
  - type: web
    name: cryptoairdrop-frontend
    env: docker
    dockerfilePath: ./Dockerfile.frontend
    plan: free
    envVars:
      - key: NEXT_PUBLIC_API_URL
        fromService:
          type: web
          name: cryptoairdrop-backend
          envVarKey: RENDER_EXTERNAL_URL
      - key: NEXT_PUBLIC_API_BASE_URL
        value: ${NEXT_PUBLIC_API_URL}/api
      - key: NEXTAUTH_URL
        value: https://cryptoairdrop-frontend.onrender.com
      - key: NEXTAUTH_SECRET
        generateValue: true
      - key: NODE_ENV
        value: production
